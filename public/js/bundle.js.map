{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/actions/FooterActions.js","app/actions/NavbarActions.js","app/actions/admin/AddRosterActions.js","app/actions/admin/AdminActions.js","app/actions/admin/AdminSideNavActions.js","app/actions/admin/RosterManagementActions.js","app/actions/admin/ViewRostersActions.js","app/alt.js","app/components/App.js","app/components/Footer.js","app/components/Home.js","app/components/Navbar.js","app/components/admin/AddRoster.js","app/components/admin/Admin.js","app/components/admin/AdminSideNav.js","app/components/admin/RosterManagement.js","app/components/admin/ViewRosters.js","app/main.js","app/routes.js","app/stores/FooterStore.js","app/stores/NavbarStore.js","app/stores/admin/AddRosterStore.js","app/stores/admin/AdminSideNavStore.js","app/stores/admin/AdminStore.js","app/stores/admin/RosterManagementStore.js","app/stores/admin/ViewRostersStore.js"],"names":[],"mappings":"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","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import alt from '../alt';\n\nclass FooterActions {\n  constructor() {\n    this.generateActions(\n      'getTopCharactersSuccess',\n      'getTopCharactersFail'\n    );\n  }\n\n  getTopCharacters() {\n    // $.ajax({ url: '/api/characters/top' })\n    //   .done((data) => {\n    //     this.actions.getTopCharactersSuccess(data)\n    //   })\n    //   .fail((jqXhr) => {\n    //     this.actions.getTopCharactersFail(jqXhr)\n    //   });\n  }\n}\n\nexport default alt.createActions(FooterActions);\n","import alt from '../alt';\nimport {assign} from 'underscore';\n\nclass NavbarActions {\n  constructor() {\n    this.generateActions(\n      'updateOnlineUsers',\n      'updateAjaxAnimation',\n      'updateSearchQuery',\n      'getCharacterCountSuccess',\n      'getCharacterCountFail',\n      'findCharacterSuccess',\n      'findCharacterFail'\n    );\n  }\n\n  findCharacter(payload) {\n    $.ajax({\n      url: '/api/characters/search',\n      data: { name: payload.searchQuery }\n    })\n      .done((data) => {\n        assign(payload, data);\n        this.actions.findCharacterSuccess(payload);\n      })\n      .fail(() => {\n        this.actions.findCharacterFail(payload);\n      });\n  }\n\n  getCharacterCount() {\n    $.ajax({ url: '/api/characters/count' })\n      .done((data) => {\n        this.actions.getCharacterCountSuccess(data)\n      })\n      .fail((jqXhr) => {\n        this.actions.getCharacterCountFail(jqXhr)\n      });\n  }\n}\n\nexport default alt.createActions(NavbarActions);\n","import alt from '../../alt';\nimport {assign} from 'underscore';\n\nclass AddRosterActions {\n  constructor() {\n    this.generateActions(\n      'updateRosterName',\n      'addRosterSuccess',\n      'addRosterFailure'\n    );\n  }\n\n  addRoster(rosterName) {\n    $.ajax({\n      method: 'POST',\n      url: '/api/admin/roster/add',\n      data: { 'name' : rosterName }\n    }).done((data) => {\n      assign(rosterName, data);\n      this.addRosterSuccess(rosterName);\n    }).fail(() => {\n      this.addRosterFailure();\n    });\n  }\n}\n\nexport default alt.createActions(AddRosterActions);\n","import alt from '../../alt';\n\nclass AdminActions {\n  constructor() {\n    this.generateActions(\n      'placeholder'\n    );\n  }\n}\n\nexport default alt.createActions(AdminActions);\n","import alt from '../../alt';\n\nclass AdminSideNavActions {\n  constructor() {\n    this.generateActions(\n      'redirects?'\n    );\n  }\n}\n\nexport default alt.createActions(AdminSideNavActions);\n","import alt from '../../alt';\n\nclass RosterManagementActions {\n  constructor() {\n    this.generateActions(\n      'placeholder'\n    );\n  }\n}\n\nexport default alt.createActions(RosterManagementActions);\n","import alt from '../../alt';\n\nclass ViewRostersActions {\n  constructor() {\n    this.generateActions(\n      'updateRosterListSuccess',\n      'updateRosterListFailure'\n    );\n  }\n\n  updateRosterList() {\n    $.ajax({\n      url: '/api/admin/roster/',\n    }).done((data) => {\n      this.updateRosterListSuccess(data);\n    }).fail((jqXhr) => {\n      this.updateRosterListFailure(jqXhr);\n    });\n  }\n}\n\nexport default alt.createActions(ViewRostersActions);\n","import Alt from 'alt';\n\nexport default new Alt();\n","import Navbar from './Navbar';\nimport Footer from './Footer';\nimport React from 'react';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Navbar history={this.props.history} />\n        {this.props.children}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport FooterStore from '../stores/FooterStore';\nimport FooterActions from '../actions/FooterActions';\n\nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = FooterStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    FooterStore.listen(this.onChange);\n    FooterActions.getTopCharacters();\n  }\n\n  componentWillUnmount() {\n    FooterStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  render() {\n    let admins = this.state.admins.map((name) => {\n      return (\n        <li key={name}>{name}</li>\n      )\n    });\n\n    return (\n      <footer>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-sm-5'>\n              <h2 className='lead'><strong>Darkstorm</strong></h2>\n              <p>Scheduling application for a World of Warcraft raiding guild.</p>\n            </div>\n            <div className='col-sm-7 hidden-xs'>\n              <h2 className='lead'><strong>Admins</strong></h2>\n              <ul className='list-inline'>\n                {admins}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div className='alert alert-info'>\n        Hello from Home Component\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport NavbarStore from '../stores/NavbarStore';\nimport NavbarActions from '../actions/NavbarActions';\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = NavbarStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    NavbarStore.listen(this.onChange);\n    //NavbarActions.getCharacterCount();\n\n    let socket = io.connect();\n\n    socket.on('onlineUsers', (data) => {\n      NavbarActions.updateOnlineUsers(data);\n    });\n\n    $(document).ajaxStart(() => {\n      NavbarActions.updateAjaxAnimation('fadeIn');\n    });\n\n    $(document).ajaxComplete(() => {\n      setTimeout(() => {\n        NavbarActions.updateAjaxAnimation('fadeOut');\n      }, 750);\n    });\n  }\n\n  componentWillUnmount() {\n    NavbarStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    let searchQuery = this.state.searchQuery.trim();\n\n    if (searchQuery) {\n      NavbarActions.findCharacter({\n        searchQuery: searchQuery,\n        searchForm: this.refs.searchForm,\n        history: this.props.history\n      });\n    }\n  }\n\n  render() {\n    return (\n      <nav className='navbar navbar-default navbar-static-top'>\n        <div className='navbar-header'>\n          <button type='button' className='navbar-toggle collapsed' data-toggle='collapse' data-target='#navbar'>\n            <span className='sr-only'>Toggle navigation</span>\n            <span className='icon-bar'></span>\n            <span className='icon-bar'></span>\n            <span className='icon-bar'></span>\n          </button>\n          <Link to='/' className='navbar-brand'>\n            <span ref='triangles' className={'triangles animated ' + this.state.ajaxAnimationClass}>\n              <div className='tri invert'></div>\n              <div className='tri invert'></div>\n              <div className='tri'></div>\n              <div className='tri invert'></div>\n              <div className='tri invert'></div>\n              <div className='tri'></div>\n              <div className='tri invert'></div>\n              <div className='tri'></div>\n              <div className='tri invert'></div>\n            </span>\n            Darkstorm Schedule\n            <span className='badge badge-up badge-danger'>{this.state.onlineUsers}</span>\n          </Link>\n        </div>\n        <div id='navbar' className='navbar-collapse collapse'>\n          { /*<form ref='searchForm' className='navbar-form navbar-left animated' onSubmit={this.handleSubmit.bind(this)}>\n            <div className='input-group'>\n              <input type='text' className='form-control' placeholder={this.state.totalCharacters + ' characters'} value={this.state.searchQuery} onChange={NavbarActions.updateSearchQuery} />\n              <span className='input-group-btn'>\n                <button className='btn btn-default' onClick={this.handleSubmit.bind(this)}><span className='glyphicon glyphicon-search'></span></button>\n              </span>\n            </div>\n          </form>*/ }\n          <ul className='nav navbar-nav'>\n            <li><Link to='/'>Home</Link></li>\n            <li><Link to='/stats'>Roster</Link></li>\n            <li className='dropdown'>\n              <a href='#' className='dropdown-toggle' data-toggle='dropdown'>Sections<span className='caret'></span></a>\n              <ul className='dropdown-menu'>\n                <li><Link to='/DPS'>DPS</Link></li>\n                <li><Link to='/Tank'>Tank</Link></li>\n                <li><Link to='/Healer'>Healer</Link></li>\n\n                { /*<li className='dropdown-submenu'>\n                  <Link to='/top/caldari'>Caldari</Link>\n                  <ul className='dropdown-menu'>\n                    <li><Link to='/top/caldari/achura'>Achura</Link></li>\n                    <li><Link to='/top/caldari/civire'>Civire</Link></li>\n                    <li><Link to='/top/caldari/deteis'>Deteis</Link></li>\n                  </ul>\n                </li>\n                <li className='dropdown-submenu'>\n                  <Link to='/top/gallente'>Gallente</Link>\n                  <ul className='dropdown-menu'>\n                    <li><Link to='/top/gallente/gallente'>Gallente</Link></li>\n                    <li><Link to='/top/gallente/intaki'>Intaki</Link></li>\n                    <li><Link to='/top/gallente/jin-mei'>Jin-Mei</Link></li>\n                  </ul>\n                </li>\n                <li className='dropdown-submenu'>\n                  <Link to='/top/minmatar'>Minmatar</Link>\n                  <ul className='dropdown-menu'>\n                    <li><Link to='/top/minmatar/brutor'>Brutor</Link></li>\n                    <li><Link to='/top/minmatar/sebiestor'>Sebiestor</Link></li>\n                    <li><Link to='/top/minmatar/vherokior'>Vherokior</Link></li>\n                  </ul>\n                </li>\n                <li className='dropdown-submenu'>\n                  <Link to='/top/amarr'>Amarr</Link>\n                  <ul className='dropdown-menu'>\n                    <li><Link to='/top/amarr/amarr'>Amarr</Link></li>\n                    <li><Link to='/top/amarr/ni-kunni'>Ni-Kunni</Link></li>\n                    <li><Link to='/top/amarr/khanid'>Khanid</Link></li>\n                  </ul>\n                </li>\n                <li className='divider'></li>\n                <li><Link to='/shame'>Hall of Shame</Link></li>*/ }\n              </ul>\n            </li>\n            { /*<li className='dropdown'>\n              <a href='#' className='dropdown-toggle' data-toggle='dropdown'>Female <span className='caret'></span></a>\n              <ul className='dropdown-menu'>\n                <li><Link to='/female'>All</Link></li>\n                <li className='dropdown-submenu'>\n                  <Link to='/female/caldari'>Caldari</Link>\n                  <ul className='dropdown-menu'>\n                    <li><Link to='/female/caldari/achura'>Achura</Link></li>\n                    <li><Link to='/female/caldari/civire/'>Civire</Link></li>\n                    <li><Link to='/female/caldari/deteis'>Deteis</Link></li>\n                  </ul>\n                </li>\n                <li className='dropdown-submenu'>\n                  <Link to='/female/gallente'>Gallente</Link>\n                  <ul className='dropdown-menu'>\n                    <li><Link to='/female/gallente/gallente'>Gallente</Link></li>\n                    <li><Link to='/female/gallente/intaki'>Intaki</Link></li>\n                    <li><Link to='/female/gallente/jin-mei'>Jin-Mei</Link></li>\n                  </ul>\n                </li>\n                <li className='dropdown-submenu'>\n                  <Link to='/female/minmatar'>Minmatar</Link>\n                  <ul className='dropdown-menu'>\n                    <li><Link to='/female/minmatar/brutor'>Brutor</Link></li>\n                    <li><Link to='/female/minmatar/sebiestor'>Sebiestor</Link></li>\n                    <li><Link to='/female/minmatar/vherokior'>Vherokior</Link></li>\n                  </ul>\n                </li>\n                <li className='dropdown-submenu'>\n                  <Link to='/female/amarr'>Amarr</Link>\n                  <ul className='dropdown-menu'>\n                    <li><Link to='/female/amarr/amarr'>Amarr</Link></li>\n                    <li><Link to='/female/amarr/ni-kunni'>Ni-Kunni</Link></li>\n                    <li><Link to='/female/amarr/khanid'>Khanid</Link></li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n            <li className='dropdown'>\n              <a href='#' className='dropdown-toggle' data-toggle='dropdown'>Male <span className='caret'></span></a>\n              <ul className='dropdown-menu'>\n                <li><Link to='/male'>All</Link></li>\n                <li className='dropdown-submenu'>\n                  <Link to='/male/caldari'>Caldari</Link>\n                  <ul className='dropdown-menu'>\n                    <li><Link to='/male/caldari/achura'>Achura</Link></li>\n                    <li><Link to='/male/caldari/civire'>Civire</Link></li>\n                    <li><Link to='/male/caldari/deteis'>Deteis</Link></li>\n                  </ul>\n                </li>\n                <li className='dropdown-submenu'>\n                  <Link to='/male/gallente'>Gallente</Link>\n                  <ul className='dropdown-menu'>\n                    <li><Link to='/male/gallente/gallente'>Gallente</Link></li>\n                    <li><Link to='/male/gallente/intaki'>Intaki</Link></li>\n                    <li><Link to='/male/gallente/jin-mei'>Jin-Mei</Link></li>\n                  </ul>\n                </li>\n                <li className='dropdown-submenu'>\n                  <Link to='/male/minmatar'>Minmatar</Link>\n                  <ul className='dropdown-menu'>\n                    <li><Link to='/male/minmatar/brutor'>Brutor</Link></li>\n                    <li><Link to='/male/minmatar/sebiestor'>Sebiestor</Link></li>\n                    <li><Link to='/male/minmatar/vherokior'>Vherokior</Link></li>\n                  </ul>\n                </li>\n                <li className='dropdown-submenu'>\n                  <Link to='/male/amarr'>Amarr</Link>\n                  <ul className='dropdown-menu'>\n                    <li><Link to='/male/amarr/amarr'>Amarr</Link></li>\n                    <li><Link to='/male/amarr/ni-kunni'>Ni-Kunni</Link></li>\n                    <li><Link to='/male/amarr/khanid'>Khanid</Link></li>\n                  </ul>\n                </li>\n              </ul>\n            </li> */ }\n            <li><Link to='/admin'>Admin</Link></li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport AddRosterStore from '../../stores/admin/AddRosterStore';\nimport AddRosterActions from '../../actions/admin/AddRosterActions';\n\nclass AddRoster extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = AddRosterStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    AddRosterStore.listen(this.onChange);\n    console.log(this.state);\n  }\n\n  componentWillUnmount() {\n    AddRosterStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    console.log(state);\n    this.setState(state);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    let rosterName = this.state.rosterName.trim();\n\n    if (rosterName) {\n      AddRosterActions.addRoster(rosterName);\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit.bind(this)}>\n        <div className='form-group'>\n          <label htmlFor='rosterName'>Roster Name</label>\n          <input type=\"text\" className='form-control' id='rosterName' placeholder='Main Raid, Alt Raid etc...' value={this.state.rosterName} onChange={AddRosterActions.updateRosterName}></input>\n        </div>\n        <button type='submit' className='btn btn-default'>Submit</button>\n      </form>\n    );\n  }\n}\n\nexport default AddRoster;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport AdminStore from '../../stores/admin/AdminStore';\nimport AdminActions from '../../actions/admin/AdminActions';\nimport AdminSideNav from './AdminSideNav';\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = AdminStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    AdminStore.listen(this.onChange);\n  }\n\n  componentWillUnmount() {\n    AdminStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <AdminSideNav></AdminSideNav>\n      </div>\n    );\n  }\n}\n\nexport default Admin;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport AdminSideNavStore from '../../stores/admin/AdminSideNavStore';\nimport AdminSideNavActions from '../../actions/admin/AdminSideNavActions';\n\nclass AdminSideNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = AdminSideNavStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    AdminSideNavStore.listen(this.onChange);\n  }\n\n  componentWillUnmount() {\n    AdminSideNavStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  render() {\n    return (\n      <div className='col-md-2 sidebar'>\n        <ul className='nav'>\n          <li><Link to='/admin/roster'>Roster</Link></li>\n          <li><Link to='/admin/schedule'>Schedule</Link></li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default AdminSideNav;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport RosterManagementStore from '../../stores/admin/RosterManagementStore';\nimport RosterManagementActions from '../../actions/admin/RosterManagementActions';\nimport AdminSideNav from './AdminSideNav';\nimport AddRoster from './AddRoster';\nimport ViewRosters from './ViewRosters';\n\nclass RosterManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = RosterManagementStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    RosterManagementStore.listen(this.onChange);\n  }\n\n  componentWillUnmount() {\n    RosterManagementStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <AdminSideNav></AdminSideNav>\n        <div className='col-md-6'>\n          <AddRoster></AddRoster>\n          <ViewRosters></ViewRosters>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RosterManagement;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport ViewRostersStore from '../../stores/admin/ViewRostersStore';\nimport ViewRostersActions from '../../actions/admin/ViewRostersActions';\n\nclass ViewRosters extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = ViewRostersStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    ViewRostersStore.listen(this.onChange);\n    ViewRostersActions.updateRosterList();\n  }\n\n  componentWillUnmount() {\n    ViewRostersStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  render() {\n    console.log(this.state.rosterList);\n    var rosterListCopy = this.state.rosterList;\n    var arr = Object.keys(rosterListCopy).map(function(i) {return rosterListCopy[i]});\n\n    let list = arr.map((roster) => {\n      return (\n        <option key={roster._id} value={roster.name}>{roster.name}</option>\n      )\n    });\n\n    return (\n      <select className='form-control'>\n        {list}\n      </select>\n    );\n  }\n}\n\nexport default ViewRosters;\n","import React from 'react';\n//var Router = require('react-router').Router\nimport { Router, browserHistory } from 'react-router'\nimport ReactDOM from 'react-dom';\n//import createBrowserHistory from 'history/lib/createBrowserHistory';\nimport routes from './routes';\n\n//let history = createBrowserHistory();\n\nReactDOM.render(<Router history={browserHistory}>{routes}</Router>, document.getElementById('app'));\n","import React from 'react';\nimport {Route} from 'react-router';\nimport App from './components/App';\nimport Home from './components/Home';\nimport Admin from './components/admin/Admin';\nimport RosterManagement from './components/admin/RosterManagement';\n\nexport default (\n  <Route component={App}>\n    <Route path='/' component={Home} />\n    <Route path='/admin' component={Admin} />\n    <Route path='/admin/roster' component={RosterManagement} />\n  </Route>\n);\n","import alt from '../alt';\nimport FooterActions from '../actions/FooterActions';\n\nclass FooterStore {\n  constructor() {\n    this.bindActions(FooterActions);\n    this.characters = [];\n    this.admins = ['Aeristial', 'Derp', 'Macio', 'Trallas', 'Xenorie'];\n  }\n\n  onGetTopCharactersSuccess(data) {\n    this.characters = data.slice(0, 5);\n  }\n\n  onGetTopCharactersFail(jqXhr) {\n    // Handle multiple response formats, fallback to HTTP status code number.\n    toastr.error(jqXhr.responseJSON && jqXhr.responseJSON.message || jqXhr.responseText || jqXhr.statusText);\n  }\n}\n\nexport default alt.createStore(FooterStore);\n","import alt from '../alt';\nimport NavbarActions from '../actions/NavbarActions';\n\nclass NavbarStore {\n  constructor() {\n    this.bindActions(NavbarActions);\n    this.totalCharacters = 0;\n    this.onlineUsers = 0;\n    this.searchQuery = '';\n    this.ajaxAnimationClass = '';\n  }\n\n  onFindCharacterSuccess(payload) {\n    payload.history.pushState(null, '/characters/' + payload.characterId);\n  }\n\n  onFindCharacterFail(payload) {\n    payload.searchForm.classList.add('shake');\n    setTimeout(() => {\n      payload.searchForm.classList.remove('shake');\n    }, 1000);\n  }\n\n  onUpdateOnlineUsers(data) {\n    this.onlineUsers = data.onlineUsers;\n  }\n\n  onUpdateAjaxAnimation(className) {\n    this.ajaxAnimationClass = className; //fadein or fadeout\n  }\n\n  onUpdateSearchQuery(event) {\n    this.searchQuery = event.target.value;\n  }\n\n  onGetCharacterCountSuccess(data) {\n    this.totalCharacters = data.count;\n  }\n\n  onGetCharacterCountFail(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n}\n\nexport default alt.createStore(NavbarStore);\n","import alt from '../../alt'\nimport AddRosterActions from '../../actions/admin/AddRosterActions';\n\nclass AddRosterStore {\n  constructor() {\n    this.bindActions(AddRosterActions);\n    this.rosterName = '';\n    this.addRosterResultMessage = '';\n  }\n\n  onUpdateRosterName(e) {\n    console.log(e.target.value)\n    this.rosterName = e.target.value;\n  }\n\n  onAddRosterSuccess(rosterName) {\n    this.addRosterResultMessage = rosterName + ' has successfully been added';\n  }\n\n  onAddRosterFailure() {\n    this.addRosterResultMessage = 'Unable to add roster';\n  }\n}\n\nexport default alt.createStore(AddRosterStore);\n","import alt from '../../alt'\nimport AdminSideNavActions from '../../actions/admin/AdminSideNavActions';\n\nclass AdminSideNavStore {\n  constructor() {\n    this.bindActions(AdminSideNavActions);\n  }\n}\n\nexport default alt.createStore(AdminSideNavStore);\n","import alt from '../../alt';\nimport AdminActions from '../../actions/admin/AdminActions';\n\nclass AdminStore {\n  constructor() {\n    this.bindActions(AdminActions);\n  }\n}\n\nexport default alt.createStore(AdminStore);\n","import alt from '../../alt'\nimport RosterManagementActions from '../../actions/admin/RosterManagementActions';\n\nclass RosterManagementStore {\n  constructor() {\n    this.bindActions(RosterManagementActions);\n  }\n}\n\nexport default alt.createStore(RosterManagementStore);\n","import alt from '../../alt'\nimport ViewRostersActions from '../../actions/admin/ViewRostersActions';\n\nclass ViewRostersStore {\n  constructor() {\n    this.bindActions(ViewRostersActions);\n    this.rosterList = {};\n  }\n\n  onUpdateRosterListSuccess(data) {\n    console.log(data);\n    this.rosterList = data;\n  }\n\n  onUpdateRosterListFailure(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n}\n\nexport default alt.createStore(ViewRostersStore);\n"]}