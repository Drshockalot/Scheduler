{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/actions/FooterActions.js","app/actions/NavbarActions.js","app/actions/ProfileActions.js","app/actions/admin/AddRosterActions.js","app/actions/admin/AdminActions.js","app/actions/admin/AdminSideNavActions.js","app/actions/admin/CharacterManagementActions.js","app/actions/admin/RosterControlPanelActions.js","app/actions/admin/RosterManagementActions.js","app/actions/admin/RosterViewActions.js","app/actions/admin/ViewRostersActions.js","app/alt.js","app/components/App.js","app/components/Footer.js","app/components/Home.js","app/components/Navbar.js","app/components/Profile.js","app/components/admin/AddRoster.js","app/components/admin/Admin.js","app/components/admin/AdminSideNav.js","app/components/admin/CharacterManagement.js","app/components/admin/RosterControlPanel.js","app/components/admin/RosterManagement.js","app/components/admin/RosterView.js","app/components/admin/ViewRosters.js","app/main.js","app/routes.js","app/stores/FooterStore.js","app/stores/NavbarStore.js","app/stores/ProfileStore.js","app/stores/admin/AddRosterStore.js","app/stores/admin/AdminSideNavStore.js","app/stores/admin/AdminStore.js","app/stores/admin/CharacterManagementStore.js","app/stores/admin/RosterControlPanelStore.js","app/stores/admin/RosterManagementStore.js","app/stores/admin/RosterViewStore.js","app/stores/admin/ViewRostersStore.js","node_modules/classnames/index.js","utility/WowClasses.js","utility/WowRaces.js"],"names":[],"mappings":"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","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import alt from '../alt';\n\nclass FooterActions {\n  constructor() {\n    this.generateActions(\n      'getTopCharactersSuccess',\n      'getTopCharactersFail'\n    );\n  }\n\n  getTopCharacters() {\n    // $.ajax({ url: '/api/characters/top' })\n    //   .done((data) => {\n    //     this.actions.getTopCharactersSuccess(data)\n    //   })\n    //   .fail((jqXhr) => {\n    //     this.actions.getTopCharactersFail(jqXhr)\n    //   });\n  }\n}\n\nexport default alt.createActions(FooterActions);\n","import alt from '../alt';\nimport {assign} from 'underscore';\nimport { browserHistory } from 'react-router'\n\nclass NavbarActions {\n  constructor() {\n    this.generateActions(\n      'updateOnlineUsers',\n      'updateAjaxAnimation',\n      'updateSearchQuery',\n      'getCharacterCountSuccess',\n      'getCharacterCountFail',\n      'findCharacterSuccess',\n      'findCharacterFail',\n      'updateBattletag',\n      'updateAccessToken',\n      'checkLoginFailure',\n      'checkUserSuccess',\n      'checkUserFailure'\n    );\n  }\n\n  checkLogin() {\n    $.ajax({\n      url: '/auth/bnet/status'\n    }).done((data) => {\n      if(data) {\n        this.updateBattletag(data.battletag);\n        this.updateAccessToken(data.token);\n        $.ajax({\n          method: 'POST',\n          url: '/api/user/log',\n          data: { battletag: data.battletag, role: 'member' }\n        }).done((result) => {\n          this.checkUserSuccess(result.data.user.role);\n        }).fail((jqXhr) => {\n          this.checkUserFailure(jqXhr);\n        });\n      }\n    }).fail((jqXhr) => {\n      this.checkLoginFailure(jqXhr);\n    });\n  }\n\n  navigateProfile() {\n    browserHistory.push('/profile');\n  }\n}\n\nexport default alt.createActions(NavbarActions);\n","import alt from '../alt';\nimport {assign} from 'underscore';\nimport NavbarStore from '../stores/NavbarStore';\n\nclass ProfileActions {\n  constructor() {\n    this.generateActions(\n      'populateRetrievedCharactersSuccess',\n      'populateRetrievedCharactersFailure',\n      'confirmCharacterSuccess',\n      'confirmCharacterFailure',\n      'updateStoredCharactersSuccess',\n      'updateStoredCharactersFailure',\n      'handleMainRoleChange',\n      'handleOffRoleChange',\n      'saveStoredCharacterDetailsSuccess',\n      'saveStoredCharacterDetailsFailure',\n      'deleteStoredCharacterSuccess',\n      'deleteStoredCharacterFailure',\n      'retrieveAverageIlvlFailure',\n      'updateCharacterIlvl'\n    );\n  }\n\n  retrieveProfileCharacters() {\n    $.ajax({\n      method: 'GET',\n      url: 'https://eu.api.battle.net/wow/user/characters?locale=en_GB&apikey=8fc24vcgky6r8yzja8a4efxncgu8z77g&access_token=' + NavbarStore.getState().accessToken\n    }).done((data) => {\n      this.populateRetrievedCharactersSuccess(data);\n    }).fail((jqXhr) => {\n      this.populateRetrievedCharactersFailure(jqXhr);\n    });\n  }\n\n  getStoredCharacters() {\n    $.ajax({\n      method: 'GET',\n      url: '/api/character/confirmed/' + encodeURIComponent(NavbarStore.getState().battletag)\n    }).done((result) => {\n      console.log(result);\n      this.updateStoredCharactersSuccess(result);\n    }).fail((jqXhr) => {\n      console.log(jqXhr);\n      this.updateStoredCharactersFailure(jqXhr);\n    });\n  }\n\n  confirmCharacter(character) {\n    character.battletag = NavbarStore.getState().battletag;\n    $.ajax({\n      method: 'POST',\n      url: '/api/character/confirm/' + encodeURIComponent(NavbarStore.getState().battletag),\n      data: character\n    }).done((result) => {\n      console.log(result);\n      this.confirmCharacterSuccess(result);\n      this.getStoredCharacters();\n    }).fail((jqXhr) => {\n      console.log(jqXhr);\n      this.confirmCharacterFailure(jqXhr);\n    });\n  }\n\n  saveStoredCharacterDetails(character) {\n    $.ajax({\n      method: 'PUT',\n      url: '/api/character/' + character.id,\n      data: character\n    }).done((result) => {\n      this.saveStoredCharacterDetailsSuccess(result);\n    }).fail((jqXhr) => {\n      this.saveStoredCharacterDetailsFailure(jqXhr);\n    });\n  }\n\n  deleteStoredCharacter(character) {\n    $.ajax({\n      method: 'DELETE',\n      url: '/api/character/' + character.id,\n      data: character\n    }).done((result) => {\n      this.deleteStoredCharacterSuccess(character.name);\n      this.getStoredCharacters();\n    }).fail((jqXhr) => {\n      this.deleteStoredCharacterFailure(jqXhr);\n    });\n  }\n\n  updateIlvlForCharacter(character, index) {\n    $.ajax({\n      method: 'GET',\n      url: 'https://eu.api.battle.net/wow/character/' + character.realm + '/' + character.name + '?fields=items&locale=en_GB&apikey=8fc24vcgky6r8yzja8a4efxncgu8z77g'\n    }).done((result) => {\n      character.average_ilvl = result.items.averageItemLevel;\n      this.saveStoredCharacterDetails(character);\n      this.updateCharacterIlvl(result.items.averageItemLevel, index);\n    }).fail((jqXhr) => {\n      this.retrieveAverageIlvlFailure(jqXhr);\n    });\n  }\n}\n\nexport default alt.createActions(ProfileActions);\n","import alt from '../../alt';\nimport {assign} from 'underscore';\nimport RosterManagementActions from './RosterManagementActions';\n\nclass AddRosterActions {\n  constructor() {\n    this.generateActions(\n      'updateRosterName',\n      'updateRosterDescription',\n      'addRosterSuccess',\n      'addRosterFailure'\n    );\n  }\n\n  addRoster(roster) {\n    $.ajax({\n      method: 'POST',\n      url: '/api/roster/admin',\n      data: roster\n    }).done((data) => {\n      this.addRosterSuccess(data);\n      RosterManagementActions.getAllRosters();\n    }).fail(() => {\n      this.addRosterFailure();\n    });\n  }\n}\n\nexport default alt.createActions(AddRosterActions);\n","import alt from '../../alt';\n\nclass AdminActions {\n  constructor() {\n    this.generateActions(\n      'placeholder'\n    );\n  }\n}\n\nexport default alt.createActions(AdminActions);\n","import alt from '../../alt';\n\nclass AdminSideNavActions {\n  constructor() {\n    this.generateActions(\n      'redirects?'\n    );\n  }\n}\n\nexport default alt.createActions(AdminSideNavActions);\n","import alt from './../../alt';\n\nclass CharacterManagementActions {\n  constructor() {\n    this.generateActions(\n      'getCharactersForConfirmationSuccess',\n      'getCharactersForConfirmationFailure',\n      'confirmCharacterSuccess',\n      'confirmCharacterFailure',\n      'unconfirmCharacterSuccess',\n      'unconfirmCharacterFailure'\n    );\n  }\n\n  getCharactersForConfirmation() {\n    $.ajax({\n      method: 'GET',\n      url: '/api/character/admin/confirmation'\n    }).done((result) => {\n      console.log(result);\n      this.getCharactersForConfirmationSuccess(result);\n    }).fail((jqXhr) => {\n      console.log(jqXhr);\n      this.getCharactersForConfirmationFailure(jqXhr);\n    });\n  }\n\n  confirmCharacter(characterid) {\n    $.ajax({\n      method: 'PUT',\n      url: '/api/character/admin/confirm/' + characterid\n    }).done((result) => {\n      this.confirmCharacterSuccess(result);\n      this.getCharactersForConfirmation();\n    }).fail((jqXhr) => {\n      this.confirmCharacterFailure(jqXhr);\n    });\n  }\n\n  unconfirmCharacter(characterid) {\n    $.ajax({\n      method: 'DELETE',\n      url: '/api/character/admin/unconfirm/' + characterid\n    }).done((result) => {\n      this.unconfirmCharacterSuccess(result);\n      this.getCharactersForConfirmation();\n    }).fail((jqXhr) => {\n      this.unconfirmCharacterFailure(jqXhr);\n    });\n  }\n}\n\nexport default alt.createActions(CharacterManagementActions);\n","import alt from '../../alt';\n\nclass RosterControlPanelActions {\n  constructor() {\n    this.generateActions(\n      'updateCharacterClass',\n      'updateCharacterName',\n      'updateCharacterRole'\n    );\n  }\n}\n\nexport default alt.createActions(RosterControlPanelActions);\n","import alt from '../../alt';\n\nvar _ = require('underscore');\n\nclass RosterManagementActions {\n  constructor() {\n    this.generateActions(\n      'getAllRostersSuccess',\n      'getAllRostersFailure',\n      'updateSelectedRosterSuccess',\n      'updateSelectedRosterFailure',\n      'removeCharacterFromRosterSuccess',\n      'removeCharacterFromRosterFailure',\n      'addCharacterToRosterSuccess',\n      'addCharacterToRosterFailure'\n    );\n  }\n\n  getAllRosters() {\n    $.ajax({\n      method: 'GET',\n      url: '/api/roster/admin'\n    }).done((result) => {\n      this.getAllRostersSuccess(result);\n    }).fail((jqXhr) => {\n      this.getAllRostersFailure(jqXhr);\n    });\n  }\n\n  updateSelectedRoster(rosterName, rosterList) {\n    $.ajax({\n      method: 'GET',\n      url: '/api/roster/admin/' + _.findWhere(rosterList, { name: rosterName}).id\n    }).done((result) => {\n      console.log(result);\n      this.updateSelectedRosterSuccess(result);\n    }).fail((jqXhr) => {\n      console.log(jqXhr);\n      this.updateSelectedRosterFailure(jqXhr);\n    });\n  }\n\n  updateRosterListAfterCharacterChange(rosterid) {\n    $.ajax({\n      method: 'GET',\n      url: '/api/roster/admin/' + rosterid\n    }).done((result) => {\n      console.log(result);\n      this.updateSelectedRosterSuccess(result);\n    }).fail((jqXhr) => {\n      console.log(jqXhr);\n      this.updateSelectedRosterFailure(jqXhr);\n    });\n  }\n\n  removeCharacterFromRoster(characterid, rosterid) {\n    $.ajax({\n      method: 'PUT',\n      url: '/api/roster/admin/unlink/' + characterid + '/' + rosterid\n    }).done((result) => {\n      console.log(result);\n      this.removeCharacterFromRosterSuccess(result);\n      this.updateRosterListAfterCharacterChange(rosterid);\n    }).fail((jqXhr) => {\n      console.log(jqXhr);\n      this.removeCharacterFromRosterFailure(jqXhr);\n    });\n  }\n\n  addCharacterToRoster(characterid, rosterid) {\n    $.ajax({\n      method: 'PUT',\n      url: '/api/roster/admin/link/' + characterid + '/' + rosterid\n    }).done((result) => {\n      console.log(result);\n      this.addCharacterToRosterSuccess(result);\n      this.updateRosterListAfterCharacterChange(rosterid);\n    }).fail((jqXhr) => {\n      console.log(jqXhr);\n      this.addCharacterToRosterFailure(jqXhr);\n    });\n  }\n}\n\nexport default alt.createActions(RosterManagementActions);\n","import alt from '../../alt';\nimport {assign} from 'underscore';\nimport ViewRostersStore from '../../stores/admin/ViewRostersStore';\n\nclass RosterViewActions {\n  constructor() {\n    this.generateActions(\n      'populateRosterListSuccess',\n      'populateRosterListFailure'\n    );\n  }\n\n  populateRosterList(value) {\n    $.ajax({\n      method: 'POST',\n      url: '/api/admin/roster/',\n      data: { 'name' : value }\n    }).done((data) => {\n      this.populateRosterListSuccess(data);\n    }).fail(() => {\n      this.populateRosterListFailure();\n    });\n  }\n}\n\nexport default alt.createActions(RosterViewActions);\n","import alt from '../../alt';\n//import RosterViewActions from './RosterViewActions';\n\nclass ViewRostersActions {\n  constructor() {\n    this.generateActions(\n      'updateRosterListSuccess',\n      'updateRosterListFailure',\n      'updateCurrentRoster',\n      'updateCurrentRosterRaw'\n    );\n  }\n\n  updateRosterList() {\n    $.ajax({\n      url: '/api/admin/roster/',\n    }).done((data) => {\n      this.updateRosterListSuccess(data);\n      this.updateCurrentRosterRaw(data[0].name);\n    }).fail((jqXhr) => {\n      this.updateRosterListFailure(jqXhr);\n    });\n  }\n}\n\nexport default alt.createActions(ViewRostersActions);\n","import Alt from 'alt';\n\nexport default new Alt();\n","import Navbar from './Navbar';\nimport Footer from './Footer';\nimport React from 'react';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Navbar history={this.props.history}/>\n        {this.props.children}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport FooterStore from '../stores/FooterStore';\nimport FooterActions from '../actions/FooterActions';\n\nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = FooterStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    FooterStore.listen(this.onChange);\n    FooterActions.getTopCharacters();\n  }\n\n  componentWillUnmount() {\n    FooterStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  render() {\n    let admins = this.state.admins.map((name) => {\n      return (\n        <li key={name}>{name}</li>\n      );\n    });\n\n    return (\n      <footer>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-sm-5'>\n              <h2 className='lead'><strong>Darkstorm</strong></h2>\n              <p>Scheduling application for a World of Warcraft raiding guild.</p>\n            </div>\n            <div className='col-sm-7 hidden-xs'>\n              <h2 className='lead'><strong>Admins</strong></h2>\n              <ul className='list-inline'>\n                {admins}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div className='alert alert-info'>\n        Hello from Home test 1 alpha\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport NavbarStore from '../stores/NavbarStore';\nimport NavbarActions from '../actions/NavbarActions';\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = NavbarStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    NavbarStore.listen(this.onChange);\n\n    let socket = io.connect();\n\n    socket.on('onlineUsers', (data) => {\n      NavbarActions.updateOnlineUsers(data);\n    });\n\n    $(document).ajaxStart(() => {\n      NavbarActions.updateAjaxAnimation('fadeIn');\n    });\n\n    $(document).ajaxComplete(() => {\n      setTimeout(() => {\n        NavbarActions.updateAjaxAnimation('fadeOut');\n      }, 750);\n    });\n\n    NavbarActions.checkLogin();\n  }\n\n  componentWillUnmount() {\n    NavbarStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  handleLoginSubmit(event) {\n\n  }\n\n  registerRedirect() {\n    window.location = '/';\n  }\n\n  bnetAuth() {\n    window.location = '/auth/bnet';\n  }\n\n  logout() {\n    window.location = '/auth/bnet/logout';\n  }\n\n  hardLogout() {\n    window.location = '/auth/bnet/logout/hard';\n  }\n\n  render() {\n    var profilePane;\n\n    if(!this.state.battletag) {\n        profilePane = <li>\n          <a href='/auth/bnet'>Login</a>\n        </li>\n    } else {\n        profilePane = <li className='dropdown'>\n          <a href='/profile' className='dropdown-toggle' data-toggle='dropdown'>{this.state.battletag} <span className='caret'></span></a>\n          <ul className='dropdown-menu'>\n            <li><a onClick={NavbarActions.navigateProfile}>Profile</a></li>\n            <li><a href='/auth/bnet/logout'>Logout</a></li>\n          </ul>\n        </li>\n    }\n\n    return (\n      <nav className='navbar navbar-default navbar-static-top'>\n        <div className='navbar-header'>\n          <button type='button' className='navbar-toggle collapsed' data-toggle='collapse' data-target='#navbar'>\n            <span className='sr-only'>Toggle navigation</span>\n            <span className='icon-bar'></span>\n            <span className='icon-bar'></span>\n            <span className='icon-bar'></span>\n          </button>\n          <Link to='/' className='navbar-brand'>\n            <span ref='triangles' className={'triangles animated ' + this.state.ajaxAnimationClass}>\n              <div className='tri invert'></div>\n              <div className='tri invert'></div>\n              <div className='tri'></div>\n              <div className='tri invert'></div>\n              <div className='tri invert'></div>\n              <div className='tri'></div>\n              <div className='tri invert'></div>\n              <div className='tri'></div>\n              <div className='tri invert'></div>\n            </span>\n            Darkstorm Schedule\n            <span className='badge badge-up badge-danger'>{this.state.onlineUsers}</span>\n          </Link>\n        </div>\n        <div id='navbar' className='navbar-collapse collapse'>\n          <ul className='nav navbar-nav'>\n            <li><Link to='/'>Home</Link></li>\n            <li><Link to='/stats'>Roster</Link></li>\n            <li className='dropdown'>\n              <a href='#' className='dropdown-toggle' data-toggle='dropdown'>Sections<span className='caret'></span></a>\n              <ul className='dropdown-menu'>\n                <li><Link to='/DPS'>DPS</Link></li>\n                <li><Link to='/Tank'>Tank</Link></li>\n                <li><Link to='/Healer'>Healer</Link></li>\n              </ul>\n            </li>\n            <li><Link to='/admin'>Admin</Link></li>\n            {profilePane}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport ProfileStore from '../stores/ProfileStore';\nimport ProfileActions from '../actions/ProfileActions';\nimport NavbarStore from '../stores/NavbarStore';\nvar classes = require('../../utility/WowClasses');\nvar races = require('../../utility/WowRaces');\nvar _ = require('underscore');\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = ProfileStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    ProfileStore.listen(this.onChange);\n    ProfileActions.getStoredCharacters();\n  }\n\n  componentWillUnmount() {\n    NavbarStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  render() {\n    var retrievedCharactersList;\n    var storedCharactersList;\n\n    if(this.state.retrievedCharacters) {\n      var retrievedCharactersCopy = this.state.retrievedCharacters;\n      var arr = [];\n      Object.keys(retrievedCharactersCopy).map(function(i) {\n        if(retrievedCharactersCopy[i].level === 100 &&\n           retrievedCharactersCopy[i].guild === \"Darkstorm\") {\n            arr.push(retrievedCharactersCopy[i]);\n        }\n      });\n\n      retrievedCharactersList = arr.map((character) => {\n        var characterRace = _.findWhere(races, { id : character.race }).name;\n        var characterClass = _.findWhere(classes, { id : character.class }).name;\n        return (\n          <tr key={character.name}>\n            <td key={character.name}>{character.name}</td>\n            <td key={characterClass}>{characterClass}</td>\n            <td key={characterRace}>{characterRace}</td>\n            <td key={character.realm}>{character.realm}</td>\n            <td key='main/alt'>\n              <button className='btn btn-primary' onClick={() => {\n                character.rank = 'main';\n                ProfileActions.confirmCharacter(character);\n              }}>Main</button>\n              <button className='btn btn-default' onClick={() => {\n                character.rank = 'alt';\n                ProfileActions.confirmCharacter(character);\n              }}>Alt</button>\n            </td>\n          </tr>\n        );\n      });\n    }\n\n    if(this.state.storedCharacters.length > 0) {\n      storedCharactersList = this.state.storedCharacters.map((character, index) => {\n        return (\n          <div className='col-md-4'>\n            <div className='col-sm-offset-6 col-sm-6'>\n              <h2>{character.rank}</h2>\n            </div>\n            <div className='form-horizontal'>\n              <div className='form-group'>\n                <label className='col-sm-6 control-label'><strong>Name:</strong></label>\n                <div className='col-sm-6 control-label text-left'>\n                  {character.name}\n                </div>\n              </div>\n              <div className='form-group'>\n                <label className='col-sm-6 control-label'><strong>Class:</strong></label>\n                <div className='col-sm-6 control-label text-left'>\n                  {_.findWhere(classes, { id : parseInt(character.class) }).name}\n                </div>\n              </div>\n              <div className='form-group'>\n                <label className='col-sm-6 control-label'><strong>Realm:</strong></label>\n                <div className='col-sm-6 control-label text-left'>\n                  {character.realm}\n                </div>\n              </div>\n              <div className='form-group'>\n                <label className='col-sm-6 control-label'><strong>Main Role:</strong></label>\n                <div className='col-sm-6'>\n                  <select className='form-control' id='main-role' value={this.state.storedCharacters[index].main_role} onChange={e => {ProfileActions.handleMainRoleChange(e.target.value, index)}}>\n                    <option key='Tank' value='Tank'>Tank</option>\n                    <option key='Healer' value='Healer'>Healer</option>\n                    <option key='DPS' value='DPS'>DPS</option>\n                  </select>\n                </div>\n              </div>\n              <div className='form-group'>\n                <label className='col-sm-6 control-label'><strong>Off Role:</strong></label>\n                <div className='col-sm-6'>\n                  <select className='form-control' id='off-role' value={this.state.storedCharacters[index].off_role} onChange={e => {ProfileActions.handleOffRoleChange(e.target.value, index)}}>\n                    <option key='Tank' value='Tank'>Tank</option>\n                    <option key='Healer' value='Healer'>Healer</option>\n                    <option key='DPS' value='DPS'>DPS</option>\n                  </select>\n                </div>\n              </div>\n              <div className='form-group'>\n                <label className='col-sm-6 control-label'><strong>Average ilvl:</strong></label>\n                <div className='col-sm-6 control-label text-left'>\n                  {character.average_ilvl}\n                </div>\n              </div>\n              <div className='form-group'>\n                <label className='col-sm-6 control-label'><strong>Admin Confirmed:</strong></label>\n                <div className='col-sm-6 control-label text-left'>\n                  {character.confirmed}\n                </div>\n              </div>\n              <div className='form-group'>\n                <div className='col-sm-offset-6 col-sm-6'>\n                  <button className='btn btn-default' onClick={() => {\n                    ProfileActions.saveStoredCharacterDetails(this.state.storedCharacters[index]);\n                  }}>Save</button>\n                </div>\n              </div>\n              <div className='form-group'>\n                <div className='col-sm-offset-6 col-sm-6'>\n                  <button className='btn btn-danger' onClick={() => {\n                    ProfileActions.deleteStoredCharacter(this.state.storedCharacters[index]);\n                  }}>Delete</button>\n                </div>\n              </div>\n              <div className='form-group'>\n                <div className='col-sm-offset-6 col-sm-6'>\n                  <button className='btn btn-info' onClick={() => {\n                    ProfileActions.updateIlvlForCharacter(this.state.storedCharacters[index], index);\n                  }}>Update ilvl</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div className='container'>\n        <div className='row'>\n          <div className='col-md-2'>\n            <div className='btn btn-primary' onClick={ProfileActions.retrieveProfileCharacters}>Retrieve Characters</div>\n          </div>\n          <div className='col-md-10'>\n            <h3>Level 100 Characters</h3>\n            <table className='table'>\n              <tbody>\n                <tr>\n                  <td><strong>Name</strong></td>\n                  <td><strong>Class</strong></td>\n                  <td><strong>Race</strong></td>\n                  <td><strong>Realm</strong></td>\n                  <td><strong>Rank</strong></td>\n                </tr>\n                {retrievedCharactersList}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div className='row'>\n          <h3>Confirmed Characters</h3>\n        </div>\n        <div className='row'>\n          {storedCharactersList}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport AddRosterStore from '../../stores/admin/AddRosterStore';\nimport AddRosterActions from '../../actions/admin/AddRosterActions';\n\nclass AddRoster extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = AddRosterStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    AddRosterStore.listen(this.onChange);\n  }\n\n  componentWillUnmount() {\n    AddRosterStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    let rosterName = this.state.rosterName.trim();\n    let rosterDescription = this.state.rosterDescription.trim();\n\n    let roster = {};\n    roster.name = rosterName;\n    roster.description = rosterDescription;\n\n    if (roster.name != '') {\n      AddRosterActions.addRoster(roster);\n    } else {\n      toastr.error(\"You must supply a name for a Roster to add it\", \"Silly Pineapple\");\n    }\n  }\n\n  render() {\n    return (\n      <div className='col-md-6'>\n        <form className='form-horizontal' onSubmit={this.handleSubmit.bind(this)}>\n          <div className='form-group'>\n            <label className='col-sm-2 control-label' htmlFor='rosterName'>Name</label>\n            <div className='col-sm-10'>\n              <input type=\"text\" className='form-control' id='rosterName' placeholder='Main Raid, Alt Raid etc...' value={this.state.rosterName} onChange={AddRosterActions.updateRosterName}></input>\n            </div>\n          </div>\n          <div className='form-group'>\n            <label className='col-sm-2 control-label' htmlFor='rosterDescription'>Description</label>\n            <div className='col-sm-10'>\n              <textarea className='form-control' name='description' value={this.state.rosterDescription} onChange={AddRosterActions.updateRosterDescription} />\n            </div>\n          </div>\n          <button type='submit' className='btn btn-default pull-right'>Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddRoster;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport AdminStore from '../../stores/admin/AdminStore';\nimport AdminActions from '../../actions/admin/AdminActions';\nimport AdminSideNav from './AdminSideNav';\nimport NavbarStore from './../../stores/NavbarStore';\nimport { browserHistory } from 'react-router';\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = AdminStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    if (NavbarStore.getState().userRole === 'member' || NavbarStore.getState().userRole === '') {\n      browserHistory.push('/');\n      toastr.error('You do not have authorization to access Admin', 'YOU SHALL NOT PASS!!');\n    }\n  }\n\n  componentDidMount() {\n    AdminStore.listen(this.onChange);\n  }\n\n  componentWillUnmount() {\n    AdminStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <AdminSideNav></AdminSideNav>\n      </div>\n    );\n  }\n}\n\nexport default Admin;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport AdminSideNavStore from '../../stores/admin/AdminSideNavStore';\nimport AdminSideNavActions from '../../actions/admin/AdminSideNavActions';\n\nclass AdminSideNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = AdminSideNavStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    AdminSideNavStore.listen(this.onChange);\n  }\n\n  componentWillUnmount() {\n    AdminSideNavStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  render() {\n    return (\n      <div id='sidebar-wrapper'>\n        <ul className='sidebar-nav'>\n          <li><Link to='/admin/roster'>Roster Management</Link></li>\n          <li><Link to='/admin/schedule'>Schedule Management</Link></li>\n          <li><Link to='/admin/character'>Character Management</Link></li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default AdminSideNav;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport CharacterManagementStore from './../../stores/admin/CharacterManagementStore';\nimport CharacterManagementActions from './../../actions/admin/CharacterManagementActions';\nimport AdminSideNav from './AdminSideNav';\nimport NavbarStore from './../../stores/NavbarStore';\nimport { browserHistory } from 'react-router';\nimport _ from 'underscore';\n\nvar classes = require('./../../../utility/WowClasses');\nvar races = require('./../../../utility/WowRaces');\n\nclass CharacterManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = CharacterManagementStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    if (NavbarStore.getState().userRole === 'member' || NavbarStore.getState().userRole === '') {\n      browserHistory.push('/');\n      toastr.error('You do not have authorization to access Admin', 'YOU SHALL NOT PASS!!');\n    }\n  }\n\n  componentDidMount() {\n    CharacterManagementStore.listen(this.onChange);\n    CharacterManagementActions.getCharactersForConfirmation();\n  }\n\n  componentWillUnmount() {\n    CharacterManagementStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  render() {\n    var characterConfirmationList;\n\n    if(this.state.UserCharacterList) {\n      characterConfirmationList = this.state.UserCharacterList.map(function(user, index) {\n        var characterList = user.characters.map(function(character, index) {\n          var characterClass = _.findWhere(classes, { id: parseInt(character.class) }).name;\n          var btn;\n          if(character.confirmed == 0) {\n            btn = <button value={character.id} className='btn btn-success' onClick={e => {\n              CharacterManagementActions.confirmCharacter(e.target.value);\n            }}>Confirm</button>\n          } else {\n            btn = <button value={character.id} className='btn btn-danger' onClick={e => {\n              CharacterManagementActions.unconfirmCharacter(e.target.value);\n            }}>Unconfirm</button>\n          }\n          return (\n            <tr>\n              <td key={character.name}>{character.name}</td>\n              <td key={characterClass}>{characterClass}</td>\n              <td key={character.realm}>{character.realm}</td>\n              <td key={character.rank}>{character.rank}</td>\n              <td key={character.main_role + 'main'}>{character.main_role}</td>\n              <td key={character.off_role + 'off'}>{character.off_role}</td>\n              <td key='buttons'>{btn}</td>\n            </tr>\n          );\n        });\n        return (\n          <div className='row'>\n            <h4><strong>{user.battletag}</strong></h4>\n            <table className='table'>\n              <tbody>\n                <tr>\n                  <td><strong>Name</strong></td>\n                  <td><strong>Class</strong></td>\n                  <td><strong>Realm</strong></td>\n                  <td><strong>Rank</strong></td>\n                  <td><strong>Main Role</strong></td>\n                  <td><strong>Off Role</strong></td>\n                </tr>\n                {characterList}\n              </tbody>\n            </table>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div id='wrapper'>\n        <AdminSideNav></AdminSideNav>\n        <div id='page-content-wrapper'>\n          <div className='container-fluid'>\n            <div className='row'>\n              <h3>Character Confirmation</h3>\n            </div>\n            {characterConfirmationList}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CharacterManagement;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport RosterControlPanelStore from '../../stores/admin/RosterControlPanelStore';\nimport RosterControlPanelActions from '../../actions/admin/RosterControlPanelActions';\nimport ViewRostersStore from '../../stores/admin/ViewRostersStore';\n\nimport classNames from 'classnames';\n\n// import Autosize from 'Autosize';\n// import Autocomplete from 'Autocomplete';\n// import Combobox from 'Combobox';\n// import Mask from 'Mask';\n// import DatePicker from 'DatePicker';\n\nclass RosterControlPanel extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = RosterControlPanelStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    RosterControlPanelStore.listen(this.onChange);\n\n  }\n\n  componentWillUnmount() {\n    RosterControlPanelStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  handleAddCharacterSubmit(e) {\n    e.preventDefault();\n    let currentRoster = ViewRostersStore.getState().currentRoster;\n\n    RosterControlPanelActions.addCharacterToRoster(currentRoster,\n                                                   this.state.addCharacter_Name,\n                                                   this.state.addCharacter_Class,\n                                                   this.state.addCharacter);\n  }\n\n  currentClassColour() {\n    let currentClass = this.state.addCharacter_Class;\n    var arr = currentClass.split(\" \");\n\n    var ret = '';\n    for (var i = 0; i < arr.length; ++i) {\n      ret += arr[i].toLowerCase();\n      ret += '-'\n    }\n\n    ret += 'color';\n    return ret;\n  }\n\n  render() {\n    var classColour = this.currentClassColour();\n    let classColourClasses = classNames(classColour, { 'col-sm-2' : true});\n\n    return (\n      <div className='col-md-6'>\n        <h3>Add Character To Roster</h3>\n        <form className='form-horizontal' onSubmit={this.handleAddCharacterSubmit.bind(this)}>\n          <div className='form-group'>\n            <label className='col-sm-2 control-label' htmlFor='characterName'>Name</label>\n            <div className='col-sm-10'>\n              <input type='text' className='form-control' id='characterName' name='characterName' value={this.state.addCharacter_Name} onChange={RosterControlPanelActions.updateCharacterName}></input>\n            </div>\n          </div>\n          <div className='form-group'>\n            <label className='col-sm-2 control-label' htmlFor='characterClass'>Class</label>\n            <div className='col-sm-7'>\n              <select className='form-control' id='characterClass' value={this.state.addCharacter_Class} onChange={RosterControlPanelActions.updateCharacterClass}>\n                <option value='Death Knight'>Death Knight</option>\n                <option value='Demon Hunter'>Demon Hunter</option>\n                <option value='Druid'>Druid</option>\n                <option value='Hunter'>Hunter</option>\n                <option value='Mage'>Mage</option>\n                <option value='Monk'>Monk</option>\n                <option value='Paladin'>Paladin</option>\n                <option value='Priest'>Priest</option>\n                <option value='Rogue'>Rogue</option>\n                <option value='Shaman'>Shaman</option>\n                <option value='Warlock'>Warlock</option>\n                <option value='Warrior'>Warrior</option>\n              </select>\n            </div>\n            <div className={classColourClasses}>\n\n            </div>\n          </div>\n          <div className='form-group'>\n            <label className='col-sm-2 control-label' htmlFor='characterRole'>Role</label>\n            <div className='col-sm-10'>\n              <select className='form-control' id='characterRole' value={this.state.addCharacter_Role} onChange={RosterControlPanelActions.updateCharacterRole}>\n                <option value='Tank'>Tank</option>\n                <option value='DPS'>DPS</option>\n                <option value='Healer'>Healer</option>\n              </select>\n            </div>\n          </div>\n          <button type='submit' className='btn btn-default pull-right'>Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RosterControlPanel;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport RosterManagementStore from '../../stores/admin/RosterManagementStore';\nimport RosterManagementActions from '../../actions/admin/RosterManagementActions';\nimport AdminSideNav from './AdminSideNav';\nimport AddRoster from './AddRoster';\nimport ViewRosters from './ViewRosters';\nimport RosterView from './RosterView';\nimport RosterControlPanel from './RosterControlPanel';\nimport NavbarStore from './../../stores/NavbarStore';\nimport { browserHistory } from 'react-router';\n\nclass RosterManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = RosterManagementStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    if (NavbarStore.getState().userRole === 'member' || NavbarStore.getState().userRole === '') {\n      browserHistory.push('/');\n      toastr.error('You do not have authorization to access Admin', 'YOU SHALL NOT PASS!!');\n    }\n  }\n\n  componentDidMount() {\n    RosterManagementStore.listen(this.onChange);\n    RosterManagementActions.getAllRosters();\n  }\n\n  componentWillUnmount() {\n    RosterManagementStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  render() {\n    var currentRosterId;\n    var rosterList = this.state.rosterList.map(function(roster, index) {\n      if(roster.name === this.state.selectedRoster) {\n        currentRosterId = roster.id;\n      }\n      return (\n        <option key={roster.id}>{roster.name}</option>\n      );\n    }, this);\n\n    var includedCaracters = this.state.includedRosterCaracters.map(function(character, index) {\n      return (\n        <tr>\n          <td key={character.name}>{character.name}</td>\n          <td key={character.main_role + 'main'}>{character.main_role}</td>\n          <td key={character.off_role + 'off'}>{character.off_role}</td>\n          <td key='button'><button value={character.id} className='btn btn-danger' onClick={e => {\n            RosterManagementActions.removeCharacterFromRoster(character.id, currentRosterId);\n          }}>Remove</button></td>\n        </tr>\n      );\n    });\n\n    var excludedCharacters = this.state.excludedRosterCharacters.map(function(character, index) {\n      return (\n        <tr>\n          <td key={character.name}>{character.name}</td>\n          <td key={character.main_role + 'main'}>{character.main_role}</td>\n          <td key={character.off_role + 'off'}>{character.off_role}</td>\n          <td key='button'><button value={character.id} className='btn btn-success' onClick={e => {\n            RosterManagementActions.addCharacterToRoster(character.id, currentRosterId);\n          }}>Add</button></td>\n        </tr>\n      );\n    });\n\n    return (\n      <div id='wrapper'>\n        <AdminSideNav></AdminSideNav>\n        <div id='page-content-wrapper'>\n          <div className='container-fluid'>\n            <div className='row'>\n              <h3>Add New Roster</h3>\n              <AddRoster></AddRoster>\n            </div>\n            <div className='row'>\n              <h3>Manage Rosters</h3>\n              <div className='col-md-4'>\n                <div className='form-group'>\n                  <select name='roster-list' className='form-control' value={this.state.selectedRoster} onChange={e => {\n                    RosterManagementActions.updateSelectedRoster(e.target.value, this.state.rosterList);\n                  }}>\n                    {rosterList}\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className='row'>\n              <div className='col-sm-6'>\n                <h4>Included</h4>\n                <table className='table'>\n                  <tbody>\n                    <tr>\n                      <td><strong>Name</strong></td>\n                      <td><strong>Main Role</strong></td>\n                      <td><strong>Off Role</strong></td>\n                    </tr>\n                    {includedCaracters}\n                  </tbody>\n                </table>\n              </div>\n              <div className='col-sm-6'>\n                <h4>Excluded</h4>\n                <table className='table'>\n                  <tbody>\n                    <tr>\n                      <td><strong>Name</strong></td>\n                      <td><strong>Main Role</strong></td>\n                      <td><strong>Off Role</strong></td>\n                    </tr>\n                    {excludedCharacters}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RosterManagement;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport RosterViewStore from '../../stores/admin/RosterViewStore';\nimport RosterViewActions from '../../actions/admin/RosterViewActions';\nimport ViewRostersStore from '../../stores/admin/ViewRostersStore';\n\nclass RosterView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = RosterViewStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    RosterViewStore.listen(this.onChange);\n  }\n\n  componentWillUnmount() {\n    RosterViewStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  render() {\n    return(\n      <div className='col-md-6'>\n        <h1>{this.state.rosterName}</h1>\n      </div>\n    );\n  }\n}\n\nexport default RosterView;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport ViewRostersStore from '../../stores/admin/ViewRostersStore';\nimport ViewRostersActions from '../../actions/admin/ViewRostersActions';\nimport RosterViewActions from '../../actions/admin/RosterViewActions';\n\nclass ViewRosters extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = ViewRostersStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    ViewRostersStore.listen(this.onChange);\n    ViewRostersActions.updateRosterList();\n  }\n\n  componentWillUnmount() {\n    ViewRostersStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  handleCurrentRosterChange(e) {\n    ViewRostersActions.updateCurrentRoster(e.target.value);\n    RosterViewActions.populateRosterList(e.target.value);\n  }\n\n  render() {\n    var rosterListCopy = this.state.rosterList;\n    var arr = Object.keys(rosterListCopy).map(function(i) {return rosterListCopy[i]});\n\n    let list = arr.map((roster) => {\n      return (\n        <option key={roster._id} value={roster.name}>{roster.name}</option>\n      )\n    });\n\n    return (\n      <div className='col-md-6 form-horizontal'>\n        <h3>View Roster</h3>\n        <div className='form-group'>\n          <label className='col-sm-2 control-label' htmlFor='rosterList'>Rosters</label>\n          <div className='col-sm-6'>\n            <select name='rosterList' className='form-control' value={this.state.currentRoster} onChange={this.handleCurrentRosterChange}>\n              {list}\n            </select>\n          </div>\n          <button type='submit' className='btn btn-default'>DELETE</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ViewRosters;\n","import React from 'react';\n//var Router = require('react-router').Router\nimport { Router, browserHistory } from 'react-router'\nimport ReactDOM from 'react-dom';\n//import createBrowserHistory from 'history/lib/createBrowserHistory';\nimport routes from './routes';\n\n//let history = createBrowserHistory();\n\nReactDOM.render(<Router history={browserHistory}>{routes}</Router>, document.getElementById('app'));\n","import React from 'react';\nimport {Route} from 'react-router';\nimport App from './components/App';\nimport Home from './components/Home';\nimport Admin from './components/admin/Admin';\nimport RosterManagement from './components/admin/RosterManagement';\nimport Profile from './components/Profile';\nimport CharacterManagement from './components/admin/CharacterManagement';\n\nexport default (\n  <Route component={App}>\n    <Route path='/' component={Home} />\n    <Route path='/profile' component={Profile} />\n    <Route path='/admin' component={Admin} />\n    <Route path='/admin/roster' component={RosterManagement} />\n    <Route path='/admin/character' component={CharacterManagement} />\n  </Route>\n);\n","import alt from '../alt';\nimport FooterActions from '../actions/FooterActions';\n\nclass FooterStore {\n  constructor() {\n    this.bindActions(FooterActions);\n    this.characters = [];\n    this.admins = ['Aeristial', 'Derp', 'Macio', 'Trallas', 'Xenorie'];\n  }\n\n  onGetTopCharactersSuccess(data) {\n    this.characters = data.slice(0, 5);\n  }\n\n  onGetTopCharactersFail(jqXhr) {\n    // Handle multiple response formats, fallback to HTTP status code number.\n    toastr.error(jqXhr.responseJSON && jqXhr.responseJSON.message || jqXhr.responseText || jqXhr.statusText);\n  }\n}\n\nexport default alt.createStore(FooterStore);\n","import alt from '../alt';\nimport NavbarActions from '../actions/NavbarActions';\n\nclass NavbarStore {\n  constructor() {\n    this.bindActions(NavbarActions);\n    this.totalCharacters = 0;\n    this.onlineUsers = 0;\n    this.searchQuery = '';\n    this.ajaxAnimationClass = '';\n    this.battletag = '';\n    this.accessToken = '';\n    this.userRole = '';\n  }\n\n  onFindCharacterSuccess(payload) {\n    payload.history.pushState(null, '/characters/' + payload.characterId);\n  }\n\n  onFindCharacterFail(payload) {\n    payload.searchForm.classList.add('shake');\n    setTimeout(() => {\n      payload.searchForm.classList.remove('shake');\n    }, 1000);\n  }\n\n  onUpdateOnlineUsers(data) {\n    this.onlineUsers = data.onlineUsers;\n  }\n\n  onUpdateAjaxAnimation(className) {\n    this.ajaxAnimationClass = className; //fadein or fadeout\n  }\n\n  onUpdateSearchQuery(event) {\n    this.searchQuery = event.target.value;\n  }\n\n  onGetCharacterCountSuccess(data) {\n    this.totalCharacters = data.count;\n  }\n\n  onGetCharacterCountFail(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n\n  onUpdateBattletag(data) {\n    this.battletag = data;\n  }\n\n  onUpdateAccessToken(data) {\n    this.accessToken = data;\n  }\n\n  onCheckLoginFailure(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n\n  onCheckUserSuccess(role) {\n    this.userRole = role;\n  }\n\n  onCheckUserFailure(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n}\n\nexport default alt.createStore(NavbarStore);\n","import alt from '../alt';\nimport ProfileActions from '../actions/ProfileActions';\n\nclass ProfileStore {\n  constructor() {\n    this.bindActions(ProfileActions);\n    this.retrievedCharacters = null;\n    this.storedCharacters = [];\n    this.confirmedAlts = null;\n    this.confirmedMain = null;\n  }\n\n  onPopulateRetrievedCharactersSuccess(data) {\n    this.retrievedCharacters = data.characters;\n  }\n\n  onPopulateRetrievedCharactersFailure(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n\n  onConfirmCharacterSuccess(result) {\n    if (result.data.responseCode === 2) {\n      toastr.success(result.data.character.name + ' is now a confirmed character', 'Character Confirmed');\n    } else if (result.data.responseCode === 1) {\n      toastr.warning(result.data.message, 'Character Unconfirmed');\n    } else if (result.data.responseCode === 3) {\n      toastr.success(result.data.character.name + ' ' + result.data.message, 'Character Confirmed');\n    } else if (result.data.responseCode === 4) {\n      toastr.warning(result.data.character.name + ' ' + result.data.message, 'Character Not Confirmed');\n    }\n  }\n\n  onConfirmCharacterFailure(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n\n  onUpdateStoredCharactersSuccess(characters) {\n    this.storedCharacters = characters.data;\n  }\n\n  onUpdateStoredCharactersFailure(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n\n  onHandleMainRoleChange(value) {\n    this.storedCharacters[value[1]].main_role = value[0];\n  }\n\n  onHandleOffRoleChange(value) {\n    this.storedCharacters[value[1]].off_role = value[0];\n  }\n\n  onSaveStoredCharacterDetailsSuccess(value) {\n    toastr.success(value.data.character.name + ' has been updated', 'Character Data Saved');\n  }\n\n  onSaveStoredCharacterDetailsFailure(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n\n  onDeleteStoredCharacterSuccess(value) {\n    toastr.success(value + ' has been deleted', 'Character Deleted');\n  }\n\n  onDeleteStoredCharacterFailure(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n\n  onRetrieveAverageIlvlFailure(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n\n  onUpdateCharacterIlvl(values) {\n    this.storedCharacters[values[1]].average_ilvl = values[0];\n    toastr.success('Character ilvl has been updated', 'Character Confirmed');\n  }\n}\n\nexport default alt.createStore(ProfileStore);\n","import alt from '../../alt'\nimport AddRosterActions from '../../actions/admin/AddRosterActions';\n\nclass AddRosterStore {\n  constructor() {\n    this.bindActions(AddRosterActions);\n    this.rosterName = '';\n    this.rosterDescription = '';\n  }\n\n  onUpdateRosterName(e) {\n    this.rosterName = e.target.value;\n  }\n\n  onUpdateRosterDescription(e) {\n    this.rosterDescription = e.target.value;\n  }\n\n  onAddRosterSuccess(result) {\n    toastr.success('Roster: ' + result.data.roster.name + ' has been created', \"Roster Creation Successful\");\n    this.rosterName = '';\n    this.rosterDescription = '';\n  }\n\n  onAddRosterFailure() {\n    this.addRosterResultMessage = 'Unable to add roster';\n  }\n}\n\nexport default alt.createStore(AddRosterStore);\n","import alt from '../../alt'\nimport AdminSideNavActions from '../../actions/admin/AdminSideNavActions';\n\nclass AdminSideNavStore {\n  constructor() {\n    this.bindActions(AdminSideNavActions);\n  }\n}\n\nexport default alt.createStore(AdminSideNavStore);\n","import alt from '../../alt';\nimport AdminActions from '../../actions/admin/AdminActions';\n\nclass AdminStore {\n  constructor() {\n    this.bindActions(AdminActions);\n  }\n}\n\nexport default alt.createStore(AdminStore);\n","import alt from './../../alt';\nimport CharacterManagementActions from './../../actions/admin/CharacterManagementActions';\n\nclass CharacterManagementStore {\n  constructor() {\n    this.bindActions(CharacterManagementActions);\n    this.UserCharacterList = null;\n  }\n\n  onGetCharactersForConfirmationSuccess(result) {\n    this.UserCharacterList = result.data.users;\n  }\n\n  onGetCharactersForConfirmationFailure(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n\n  onConfirmCharacterSuccess(result) {\n    toastr.success(result.data.character.name + ' has been confirmed', \"Character Confirmed\");\n  }\n\n  onConfirmCharacterFailure(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n\n  onUnconfirmCharacterSuccess(result) {\n    toastr.success(result.data.character.name + ' has been unconfirmed', \"Character Unconfirmed\");\n  }\n\n  onUnconfirmCharacterFailure(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n}\n\nexport default alt.createStore(CharacterManagementStore);\n","import alt from '../../alt'\nimport RosterControlPanelActions from '../../actions/admin/RosterControlPanelActions';\n\nclass RosterControlPanelStore {\n  constructor() {\n    this.bindActions(RosterControlPanelActions);\n    this.addCharacter_Name = '';\n    this.addCharacter_Class = 'Death Knight';\n    this.addCharacter_Role = 'Tank';\n  }\n\n  onUpdateCharacterName(e) {\n    this.addCharacter_Name = e.target.value;\n  }\n\n  onUpdateCharacterClass(e) {\n    this.addCharacter_Class = e.target.value;\n  }\n\n  onUpdateCharacterRole(e) {\n    this.addCharacter_Role = e.target.value;\n  }\n}\n\nexport default alt.createStore(RosterControlPanelStore);\n","import alt from '../../alt'\nimport RosterManagementActions from '../../actions/admin/RosterManagementActions';\n\nclass RosterManagementStore {\n  constructor() {\n    this.bindActions(RosterManagementActions);\n    this.rosterList = [];\n    this.selectedRoster = '';\n    this.includedRosterCaracters = [];\n    this.excludedRosterCharacters = [];\n  }\n\n  onGetAllRostersSuccess(result) {\n    this.rosterList = result.data.rosters;\n    if(this.selectedRoster === '') {\n      this.selectedRoster= this.rosterList[0].name;\n    }\n  }\n\n  onGetAllRostersFailure(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n\n  onUpdateSelectedRosterSuccess(result) {\n    this.selectedRoster = result.data.roster.name;\n    this.includedRosterCaracters = result.data.includedCharacters;\n    this.excludedRosterCharacters = result.data.excludedCharacters;\n  }\n\n  onUpdateSelectedRosterFailure(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n\n  onRemoveCharacterFromRosterSuccess(result) {\n    toastr.success('Character removed from the ' + result.data.roster.name + ' roster', 'Success');\n  }\n\n  onRemoveCharacterFromRosterFailure(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n\n  onAddCharacterToRosterSuccess(result) {\n    toastr.success('Character added to the ' + result.data.roster.name + ' roster', 'Success');\n  }\n\n  onAddCharacterToRosterFailure(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n}\n\nexport default alt.createStore(RosterManagementStore);\n","import alt from '../../alt'\nimport RosterViewActions from '../../actions/admin/RosterViewActions';\n\nclass RosterViewStore {\n  constructor() {\n    this.bindActions(RosterViewActions);\n    this.roster = {};\n  }\n\n  onPopulateRosterListSuccess(data) {\n    this.roster = data;\n  }\n\n  onPopulateRosterListFailure() {\n\n  }\n}\n\nexport default alt.createStore(RosterViewStore);\n","import alt from '../../alt'\nimport ViewRostersActions from '../../actions/admin/ViewRostersActions';\nimport RosterViewActions from '../../actions/admin/RosterViewActions';\n\nclass ViewRostersStore {\n  constructor() {\n    this.bindActions(ViewRostersActions);\n    this.rosterList = {};\n    this.currentRoster = '';\n  }\n\n  onUpdateCurrentRoster(e) {\n    this.currentRoster = e;\n  }\n\n  onUpdateCurrentRosterRaw(name) {\n    this.currentRoster = name;\n  }\n\n  onUpdateRosterListSuccess(data) {\n    this.rosterList = data;\n  }\n\n  onUpdateRosterListFailure(jqXhr) {\n    toastr.error(jqXhr.responseJSON.message);\n  }\n}\n\nexport default alt.createStore(ViewRostersStore);\n","/*!\n  Copyright (c) 2016 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","module.exports = [\n    {\n        \"id\": 3,\n        \"mask\": 4,\n        \"powerType\": \"focus\",\n        \"name\": \"Hunter\",\n        \"token\": \"prot\"\n    }, {\n        \"id\": 4,\n        \"mask\": 8,\n        \"powerType\": \"energy\",\n        \"name\": \"Rogue\",\n        \"token\": \"vanq\"\n    }, {\n        \"id\": 1,\n        \"mask\": 1,\n        \"powerType\": \"rage\",\n        \"name\": \"Warrior\",\n        \"token\": \"prot\"\n    }, {\n        \"id\": 2,\n        \"mask\": 2,\n        \"powerType\": \"mana\",\n        \"name\": \"Paladin\",\n        \"token\": \"conq\"\n    }, {\n        \"id\": 7,\n        \"mask\": 64,\n        \"powerType\": \"mana\",\n        \"name\": \"Shaman\",\n        \"token\": \"prot\"\n    }, {\n        \"id\": 8,\n        \"mask\": 128,\n        \"powerType\": \"mana\",\n        \"name\": \"Mage\",\n        \"token\": \"vanq\"\n    }, {\n        \"id\": 5,\n        \"mask\": 16,\n        \"powerType\": \"mana\",\n        \"name\": \"Priest\",\n        \"token\": \"conq\"\n    }, {\n        \"id\": 6,\n        \"mask\": 32,\n        \"powerType\": \"runic-power\",\n        \"name\": \"Death Knight\",\n        \"token\": \"prot\"\n    }, {\n        \"id\": 11,\n        \"mask\": 1024,\n        \"powerType\": \"mana\",\n        \"name\": \"Druid\",\n        \"token\": \"vanq\"\n    }, {\n        \"id\": 9,\n        \"mask\": 256,\n        \"powerType\": \"mana\",\n        \"name\": \"Warlock\",\n        \"token\": \"conq\"\n    }, {\n        \"id\": 10,\n        \"mask\": 512,\n        \"powerType\": \"energy\",\n        \"name\": \"Monk\",\n        \"token\": \"prot\"\n    }];\n","module.exports = [\n    {\n        \"id\": 1,\n        \"mask\": 1,\n        \"side\": \"alliance\",\n        \"name\": \"Human\"\n    }, {\n        \"id\": 2,\n        \"mask\": 2,\n        \"side\": \"horde\",\n        \"name\": \"Orc\"\n    }, {\n        \"id\": 3,\n        \"mask\": 4,\n        \"side\": \"alliance\",\n        \"name\": \"Dwarf\"\n    }, {\n        \"id\": 4,\n        \"mask\": 8,\n        \"side\": \"alliance\",\n        \"name\": \"Night Elf\"\n    }, {\n        \"id\": 5,\n        \"mask\": 16,\n        \"side\": \"horde\",\n        \"name\": \"Undead\"\n    }, {\n        \"id\": 6,\n        \"mask\": 32,\n        \"side\": \"horde\",\n        \"name\": \"Tauren\"\n    }, {\n        \"id\": 7,\n        \"mask\": 64,\n        \"side\": \"alliance\",\n        \"name\": \"Gnome\"\n    }, {\n        \"id\": 8,\n        \"mask\": 128,\n        \"side\": \"horde\",\n        \"name\": \"Troll\"\n    }, {\n        \"id\": 9,\n        \"mask\": 256,\n        \"side\": \"horde\",\n        \"name\": \"Goblin\"\n    }, {\n        \"id\": 10,\n        \"mask\": 512,\n        \"side\": \"horde\",\n        \"name\": \"Blood Elf\"\n    }, {\n        \"id\": 11,\n        \"mask\": 1024,\n        \"side\": \"alliance\",\n        \"name\": \"Draenei\"\n    }, {\n        \"id\": 22,\n        \"mask\": 2097152,\n        \"side\": \"alliance\",\n        \"name\": \"Worgen\"\n    }, {\n        \"id\": 24,\n        \"mask\": 8388608,\n        \"side\": \"neutral\",\n        \"name\": \"Pandaren\"\n    }, {\n        \"id\": 25,\n        \"mask\": 16777216,\n        \"side\": \"alliance\",\n        \"name\": \"Pandaren\"\n    }, {\n        \"id\": 26,\n        \"mask\": 33554432,\n        \"side\": \"horde\",\n        \"name\": \"Pandaren\"\n    }];\n"]}